/* Test Script for Random Number generator used in Lua script */

const obj = {};

for (let i = 0; i < 1e7; i += 1) {
  const num = (1 + Math.floor(1e7 * (Math.random() ** 10)));
  if (!obj[num]) {
    obj[num] = 1;
  } else {
    obj[num] += 1;
  }
}

Object.keys(obj).forEach((key) => {
  obj[key] /= 1e7;
});

console.log(obj);

/* Probability of selecting each number */
// {
//   1: 0.1994446,
//   2: 0.0143144,
//   3: 0.0088604,
//   4: 0.0064768,
//   5: 0.0051471,
//   6: 0.0042655,
//   7: 0.0037173,
//   8: 0.0032556,
//   9: 0.0029322,
//   10: 0.0026432,
//   11: 0.0023908,
//   12: 0.0022118,
//   13: 0.0020601,
//   14: 0.0019207,
//   15: 0.0017949,
//   16: 0.0017044,
//   17: 0.0016217,
//   18: 0.0015129,
//   19: 0.0014478,
//   20: 0.0013833,
//   21: 0.0013141,
//   22: 0.0012549,
//   23: 0.0012074,
//   24: 0.0011755,
//   25: 0.0011155,
//   26: 0.0010634,
//   27: 0.0010495,
//   28: 0.0010077,
//   29: 0.0010011,
//   30: 0.0009613,
//   31: 0.0009066,
//   32: 0.0008863,
//   33: 0.0008753,
//   34: 0.0008634,
//   35: 0.000813,
//   36: 0.0008127,
//   37: 0.0007767,
//   38: 0.0007602,
//   39: 0.0007641,
//   40: 0.0007156,
//   41: 0.0007132,
//   42: 0.0006919,
//   43: 0.0006714,
//   44: 0.0006592,
//   45: 0.0006349,
//   46: 0.0006405,
//   47: 0.0006375,
//   48: 0.0006208,
//   49: 0.0005906,
//   50: 0.0005918,
//   51: 0.0005813,
//   52: 0.0005803,
//   53: 0.0005595,
//   54: 0.0005641,
//   55: 0.0005495,
//   56: 0.0005486,
//   57: 0.0005243,
//   58: 0.0005098,
//   59: 0.0005091,
//   60: 0.0005035,
//   61: 0.0004895,
//   62: 0.0004904,
//   63: 0.0004822,
//   64: 0.0004781,
//   65: 0.0004838,
//   66: 0.0004769,
//   67: 0.0004641,
//   68: 0.0004493,
//   69: 0.0004456,
//   70: 0.0004476,
//   71: 0.0004338,
//   72: 0.0004282,
//   73: 0.0004218,
//   74: 0.000406,
//   75: 0.0004239,
//   76: 0.0004182,
//   77: 0.000401,
//   78: 0.0003961,
//   79: 0.0003887,
//   80: 0.0003815,
//   81: 0.0003816,
//   82: 0.0003818,
//   83: 0.0003839,
//   84: 0.0003701,
//   85: 0.0003735,
//   86: 0.0003669,
//   87: 0.000362,
//   88: 0.0003493,
//   89: 0.0003472,
//   90: 0.0003468,
//   91: 0.0003551,
//   92: 0.0003445,
//   93: 0.0003473,
//   94: 0.00033,
//   95: 0.000328,
//   96: 0.0003284,
//   97: 0.0003309,
//   98: 0.0003215,
//   99: 0.0003265,
//   100: 0.0003216
// }
